language: cpp
os: linux
sudo: required
dist: trusty

compiler:
  - gcc
  - clang

branches:
  only:
  - master
  - gles2-dev
  - vulkan-dev
  - software-dev

before_install:

  - sudo add-apt-repository -y ppa:andykimpe/cmake
  - if [ "$CXX" == "clang++" ]; then sudo add-apt-repository -y ppa:h-rayflood/llvm; fi
  - sudo apt-get -qq update

install:
  - sudo apt-get -qq install cmake
  - if [ "$CXX" == "clang++" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.8; fi
  - if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.8"; fi
  - if [ "$CMD" == "cppcheck" ]; then sudo apt-get install -qq cppcheck; fi
  - if [ "$BACKEND" == "gles2" ]; then sudo apt-get install -qq freeglut3-dev libegl1-mesa-dev libgles2-mesa-dev; fi

env:
  - CMD=cppcheck
  - CMD=unittest TYPE=debug BACKEND=gles2
  - CMD=unittest TYPE=debug BACKEND=vulkan
  - CMD=unittest TYPE=debug BACKEND=software
  - CMD=build TYPE=release BACKEND=gles2
  - CMD=build TYPE=debug BACKEND=gles2
  - CMD=build TYPE=release BACKEND=vulkan
  - CMD=build TYPE=debug BACKEND=vulkan
  - CMD=build TYPE=release BACKEND=software
  - CMD=build TYPE=debug BACKEND=software
  - CMD=build ARGS="--examples" BACKEND=software

matrix:
  fast_finish: true
  exclude:
    - compiler: clang
      env: CMD=cppcheck
    - compiler: clang
      env: CMD=unittest TYPE=debug BACKEND=gles2
    - compiler: clang
      env: CMD=unittest TYPE=debug BACKEND=vulkan
    - compiler: clang
      env: CMD=unittest TYPE=debug BACKEND=software
  allow_failures:
    - compiler: clang

cache:
  directories:
    - tools/frameworks

script:
  - tools/scripts/travis.sh

notifications:
  irc:
    channels:
      - "chat.freenode.net#gepard-test"
    template:
      - "(%{branch} - %{commit} : %{author}): %{message}"
      - "Build details: %{build_url}, Compare: %{compare_url}"
    on_success: change
    on_failure: always
    skip_join: true
